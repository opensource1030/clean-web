%listreset {
  list-style:none;
  margin:0;
  padding:0;
}
%content-after{
  content:'';
  display:block;
  clear:both;
}
// sprite image
%sprite-image {
  background-image:url(../images/sprite@2x.png);
  background-repeat:no-repeat;
  background-size: 400px 400px;
}

@mixin font-face($family, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    src: url("/#{$family}/#{$file-name}.eot");
    src: url("/#{$family}/#{$file-name}.eot?#iefix") format("embedded-opentype"),
    url("/#{$family}/#{$file-name}.woff") format("woff"),
    url("/#{$family}/#{$file-name}.ttf") format("truetype"),
    url("/#{$family}/#{$file-name}.svg##{$family}") format("svg");
    font-weight: $weight;
    font-style: $style;
  }
}
@mixin link-color ($color) {
  color: $color;
  &:hover, &:active, &:focus {
    color: lighten($color, 25%);
    outline:0;
    text-decoration:none;
  }
}
@mixin link-color-dark ($color) {
  color: $color;
  &:hover, &:active, &:focus {
    color: darken($color, 25%);
    outline:0;
    text-decoration:none;
  }
}

@mixin bg-color ($color) {
  background-color: $color;
  &:hover {
    background-color: lighten($color, 10%);
  }
}

@mixin bg-color-darken ($color) {
  background-color: $color;
  &:hover {
    background-color: darken($color, 10%);
  }
}
// transition
@mixin transition ($type:all, $time:0.4s, $ease:ease) {
  -moz-transition		 : $type $time $ease;
  -webkit-transition	: $type $time $ease;
  -o-transition			 : $type $time $ease;
  transition					: $type $time $ease;
}
@mixin skew ($deg) {
  transform				 : skew($deg);
  -moz-transform		: skew($deg);
  -ms-transform		 : skew($deg);
  -o-transform			: skew($deg);
  -webkit-transform : skew($deg);
}
// full width
%full-width {
  padding-left: 9999px;
  padding-right: 9999px;
  margin-left: -9999px;
  margin-right: -9999px;
}
// some CSS3 style
@mixin css3($property, $value) {
  @each $prefix in -webkit-, -moz-, '' {
    #{$prefix}#{$property}: $value;
  }
}
@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x, $pos-x, $pos-y) {
  background-image: url(if($bootstrap-sass-asset-helper, twbs-image-path("#{$file-1x}"), "#{$file-1x}"));

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url(if($bootstrap-sass-asset-helper, twbs-image-path("#{$file-2x}"), "#{$file-2x}"));
    background-size: $width-1x $height-1x;
  }
};
//css tooltip
@mixin hui_tooltip($content: attr(data-tooltip), $direction: top) {
  position: relative;
  &:before, &:after {
    display: none;
    z-index: 98;
  }
  &:hover {
    &:after { // for text bubble
      content: $content;
      display: block;
      position: absolute;
      height: 12px; // (makes total height including padding 22px)
      padding: 6px;
      font-size: 12px;
      white-space: nowrap;
      color: #fff;
      @include text-shadow(1px 1px #000);
      background-color: #222;
    }
    @if ($direction == 'top'){
      &:before {
        @include triangle(down, 6px, #222);
        top: -6px; margin-top: 0;
        left: 47%;
      }
      &:after {
        top: -28px;
        left: 47%; margin-left: -20px;
      }
    }
    @else if ($direction == 'bottom'){
      &:before {
        @include triangle(up, 6px, #222);
        top: auto; margin-top: 0;
        bottom: -6px;
        left: 47%;
      }
      &:after {
        bottom: -28px;
        left: 47%; margin-left: -20px;
      }
    }
  }
}

//alerted

@mixin alerted() {
  &:before {
    content: '';
    position: absolute;
    top: 6px; right: 6px;
    height: 8px; width: 8px;
    @include border-radius(10px);
    background-color: gold;
  }
  &:after {
    content: '';
    position: absolute;
    top: 0; right: 0;
    height: 20px; width: 20px;
    @include border-radius(20px);
    background-color: transparent;
    border: solid gold;
    border-width: 2px; // animates
    @include box-sizing(border-box);
    @include animation($name: alertMe);
  }
}

@keyframes alertMe {
  // -vendor prefixes omitted for brevity, but should be used in production
  from {
    border-width: 3px;
    border-color: gold;
  }
  to {
    border-width: 0;
    border-color: rgba(gold, .1);
  }
}
//truncate text
@mixin truncateText($overflow: ellipsis){
  overflow: hidden;
  white-space: nowrap;
  text-overflow: $overflow; // values are: clip, ellipsis, or a string
}
//Vertical align

@mixin VerticalAlign(){
  &:before {
    content: '';
    display: inline-block;
    vertical-align: middle;
    height: 100%; width: .1px;
  }
}
//currency
%currency {
  position: relative;
  &:before {
    content: '$';
    position: relative;
    left: 0;
  }
}
.USD %currency:before { content: '$'; }
.EUR %currency:before { content: '\20AC'; } // must escape the html entities for each currency symbol
.ILS %currency:before { content: '\20AA'; }
.GBP %currency:before { content: '\00A3'; }

//traingle
/*
* @include triangle within a pseudo element and add positioning properties (ie. top, left)
* $direction: up, down, left, right
*/
@mixin triangle($direction, $size: 6px, $color: #222){
  content: '';
  display: block;
  position: absolute;
  height: 0; width: 0;
  @if ($direction == 'up'){
    border-bottom: $size solid $color;
    border-left: 1/2*$size solid transparent;
    border-right: 1/2*$size solid transparent;
  }
  @else if ($direction == 'down'){
    border-top: $size solid $color;
    border-left: 1/2*$size solid transparent;
    border-right: 1/2*$size solid transparent;
  }
  @else if ($direction == 'left'){
    border-top: 1/2*$size solid transparent;
    border-bottom: 1/2*$size solid transparent;
    border-right: $size solid $color;
  }
  @else if ($direction == 'right'){
    border-top: 1/2*$size solid transparent;
    border-bottom: 1/2*$size solid transparent;
    border-left: $size solid $color;
  }
}

/**
 * Tipsy.sass
 * @author: Dang Van Thanh
 * @description: A Simple Mixin Tooltip CSS Using Sass
 * @version: 1.0.5
 */
@mixin tipsy($gravity, $bgcolor, $bordersize, $radius) {
  position: relative;
  display: inline-block;

  &:hover, &:focus {
    &:before, &:after {
      visibility: visible;
      opacity: 1;
    }
  }

  &:before, &:after {
    position: absolute;
    visibility: hidden;
    opacity: 0;
    z-index: 1000000;
    pointer-events: none;
    transform: translate3d(0, 0, 0);
    -webkit-transform: translate3d(0, 0, 0);
    transition: 250ms ease-in-out;
    -webkit-transition: 250ms ease-in-out;
  }

  &:before {
    content: '';
    border: $bordersize solid transparent;
    bottom: 0;
    z-index: 1000001;
  }

  &:after {
    content: attr(data-tipsy);
    background-color: $bgcolor;
    border-radius: $radius;
    color: white;
    text-shadow: 0 -1px 0 rgba(0, 0, 0, .2);
    padding: 5px 10px;
    white-space: nowrap;
    box-shadow: 1px 1px 3px rgba(0, 0, 0, .2);
  }

  @if $gravity == 'nw' {
    &:hover, &:focus {
      &:before {
        top: -15%;
      }
      &:after {
        bottom: 115%;
      }
    }

    &:before {
      border-top-color: $bgcolor;
      top: -35%;
      right: 60%;
    }

    &:after {
      bottom: 135%;
      right: 50%;
    }
  } @else if $gravity == 'n' {
    &:hover, &:focus {
      &:before {
        top: -15%;
      }
      &:after {
        bottom: 115%;
      }
    }

    &:before, &:after {
      left: 50%;
      transform: translateX(-50%);
      -webkit-transform: translateX(-50%);
    }

    &:before {
      border-top-color: $bgcolor;
      top: -35%;
    }

    &:after {
      bottom: 135%;
    }
  } @else if $gravity == 'ne' {
    &:hover, &:focus {
      &:before {
        top: -15%;
      }
      &:after {
        bottom: 115%;
      }
    }

    &:before {
      border-top-color: $bgcolor;
      top: -35%;
      left: 60%;
    }

    &:after {
      bottom: 135%;
      left: 50%;
    }
  } @else if $gravity == 'e' {
    &:hover, &:focus {
      &:before {
        right: -15%;
      }
      &:after {
        left: 115%;
      }
    }

    &:before, &:after {
      top: 50%;
      transform: translateY(-50%);
      -webkit-transform: translateY(-50%);
    }

    &:before {
      border-right-color: $bgcolor;
      right: -35%;
    }

    &:after {
      left: 135%;
    }
  } @else if $gravity == 'se' {
    &:hover, &:focus {
      &:before {
        bottom: -15%;
      }
      &:after {
        top: 115%;
      }
    }

    &:before {
      border-bottom-color: $bgcolor;
      left: 60%;
      bottom: -35%;
    }

    &:after {
      left: 50%;
      top: 135%;
    }
  } @else if $gravity == 's' {
    &:hover, &:focus {
      &:before {
        bottom: -15%;
      }
      &:after {
        top: 115%;
      }
    }

    &:before, &:after {
      left: 50%;
      transform: translateX(-50%);
      -webkit-transform: translateX(-50%);
    }

    &:before {
      border-bottom-color: $bgcolor;
      bottom: -35%;
    }

    &:after {
      top: 135%;
    }
  } @else if $gravity == 'sw' {
    &:hover, &:focus {
      &:before {
        bottom: -15%;
      }
      &:after {
        top: 115%;
      }
    }

    &:before {
      border-bottom-color: $bgcolor;
      right: 60%;
      bottom: -35%;
    }

    &:after {
      right: 50%;
      top: 135%;
    }
  } @else if $gravity == 'w' {
    &:hover, &:focus {
      &:before {
        left: -15%;
      }
      &:after {
        right: 115%;
      }
    }

    &:before, &:after {
      top: 50%;
      transform: translateY(-50%);
      -webkit-transform: translateY(-50%);
    }

    &:before {
      border-left-color: $bgcolor;
      left: -35%;
    }
    &:after {
      right: 125%;
    }
  }
}
//center-block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
//absolute position
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

//font-size
@mixin font-size($sizeValue: 12 ){
  font-size: $sizeValue + px; //fallback for old browsers
  font-size: (0.125 * $sizeValue) + rem;
}

// flex
@mixin flex ($flex: 1) {
  -webkit-flex: $flex;
  -ms-flex: $flex;
  flex: $flex;
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content
  }
  &:-moz-placeholder {
    @content
  }
  &::-moz-placeholder {
    @content
  }
  &:-ms-input-placeholder {
    @content
  }
}